{"ast":null,"code":"var _jsxFileName = \"/home/aditya/my projects/react/foodorder/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CardContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst CART_ACTIONS = {\n  ADD: \"add\",\n  REMOVE: \"remove\"\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case CART_ACTIONS.ADD:\n      const updatedItems = state.items.concat(action.item);\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case CART_ACTIONS.REMOVE:\n      return;\n\n    default:\n      return;\n  }\n};\n\nconst CardProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: CART_ACTIONS.add,\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: CART_ACTIONS.add,\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CardProvider;\nexport default CardProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"sources":["/home/aditya/my projects/react/foodorder/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CardContext","defaultCartState","items","totalAmount","CART_ACTIONS","ADD","REMOVE","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CardProvider","props","cartState","dispatchCartAction","addItemToCartHandler","add","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,KADc;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAY,CAACC,GAAlB;AACE,YAAMM,YAAY,GAAGH,KAAK,CAACN,KAAN,CAAYU,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,YAAMC,kBAAkB,GACtBN,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAEA,aAAO;AACLd,QAAAA,KAAK,EAAES,YADF;AAELR,QAAAA,WAAW,EAAEW;AAFR,OAAP;;AAIF,SAAKV,YAAY,CAACE,MAAlB;AACE;;AACF;AACE;AAZJ;AAcD,CAfD;;AAiBA,MAAMW,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAChDQ,WADgD,EAEhDN,gBAFgD,CAAlD;;AAIA,QAAMoB,oBAAoB,GAAIR,IAAD,IAAU;AACrCO,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAEN,YAAY,CAACkB,GAArB;AAA0BT,MAAAA,IAAI,EAAEA;AAAhC,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMU,yBAAyB,GAAIC,EAAD,IAAQ;AACxCJ,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAEN,YAAY,CAACkB,GAArB;AAA0BE,MAAAA,EAAE,EAAEA;AAA9B,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADC;AAElBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEL,oBAHS;AAIlBM,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGP,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMX,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CardContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst CART_ACTIONS = {\n  ADD: \"add\",\n  REMOVE: \"remove\",\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case CART_ACTIONS.ADD:\n      const updatedItems = state.items.concat(action.item);\n      const updatedTotalAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    case CART_ACTIONS.REMOVE:\n      return;\n    default:\n      return;\n  }\n};\n\nconst CardProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: CART_ACTIONS.add, item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: CART_ACTIONS.add, id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CardContext.Provider value={cartContext}>\n      {props.children}\n    </CardContext.Provider>\n  );\n};\n\nexport default CardProvider;\n"]},"metadata":{},"sourceType":"module"}